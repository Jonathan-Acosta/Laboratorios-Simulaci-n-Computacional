import numpy as np
import matplotlib.pyplot as plt
import math
def grafica(radio,muestras,metodo):
    delta=1.0*math.pow(2.0*radio,2)/(muestras)
    sumaTotal=0.0
    fig, ax = plt.subplots()
    for i in range(0,muestras):
        if metodo==1:
            if radio>=math.pow(math.pow((2.0*radio * congruencial(19.0,23.0,58.0,56.0,muestras)[i]) - radio,2)+math.pow((2.0*radio * congruencial(32.0,23.0,98.0,60.0,muestras)[i]) - radio,2),.5):
                sumaTotal+=1.0
                ax.plot((2.0*radio * congruencial(19.0,23.0,58.0,56.0,muestras)[i]) - radio, (2.0*radio * congruencial(32.0,23.0,98.0,60.0,muestras)[i]) - radio, 'o', color='red')
            else:
                ax.plot((2.0*radio * congruencial(19.0,23.0,58.0,56.0,muestras)[i]) - radio, (2.0*radio * congruencial(32.0,23.0,98.0,60.0,muestras)[i]) - radio, 'o', color='blue')
        else:
            if radio>=math.pow(math.pow((2.0*radio * midsquare(1001333525,muestras)[i]) - radio,2)+math.pow((2.0*radio * midsquare(5421331225,muestras)[i]) - radio,2),.5):
                sumaTotal+=1.0
                ax.plot((2.0*radio * midsquare(1001333525,muestras)[i]) - radio, (2.0*radio * midsquare(5421331225,muestras)[i]) - radio, 'o', color='red')
            else:
                ax.plot((2.0*radio * midsquare(1001333525,muestras)[i]) - radio, (2.0*radio * midsquare(5421331225,muestras)[i]) - radio, 'o', color='blue')
    an = np.linspace(0, 2*np.pi, 100)
    plt.plot(radio*np.cos(an), radio*np.sin(an))
    plt.axis('equal')
    plt.axis([-radio, radio, -radio, radio])
    plt.show()
    total=sumaTotal*delta
    print "Area estimada"
    print total
    print "Area real"
    print math.pi*math.pow(radio,2)
    print "Diferencia"
    print abs(math.pi*math.pow(radio,2)-total)
def congruencial(a,b,m,x0,n):
    xn=0.0
    un=0.0
    list = []
    for i in range(0,n):
        xn=(a*x0 + b)%m
        un=xn/float(m)
        #print un
        list.insert(i,un)
        x0=xn
    return list
def midsquare(numero,iteraciones):
    list = []
    for i in range(0,iteraciones): 
        if len(str(numero))%2==0:
            total=int(numero)**2
            valor="0."
            rep=""
            ceros=""
            if len(str(total))%4!=0:
                tot=((len(str(total))/4)+1)*4-len(str(total))
                for k in range(0,tot):
                    ceros+="0"
                num=ceros+str(total)
            else:
                num=str(total)
            if len(num)!=len(str(numero)):
                posI=len(str(numero))/2
                posF=posI+len(str(numero))-1
                for m in range (posI,posF+1):
                    valor+=str(num)[m]
                    rep+=str(num)[m]
                #print valor
                list.insert(i,float(valor))
                numero=rep
            else:
                numero=num
        else:
            print "debe ser par"
    return list
radio = input('Ingrese el valor del radio:')
muestra= input('Ingrese el numero de muestras que desea:')
tipo = input('Si desea el metodo Congruencial presione 1 - Si desea el metodo Midsquare presione 2')
grafica(radio,muestra,tipo)
